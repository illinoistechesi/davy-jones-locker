{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Simulation","transform","data","scale","console","log","map","entry","hasOwnProperty","atX","atZ","atY","OPTION","ShipYOffset","x","z","y","preprocess","result","GridScale","Math","floor","ocean","OceanYOffset","width","depth","density","ships","forEach","ship","sunk","health","hull","turns","last","actions","id","type","push","actionChain","undefined","unshift","currentState","states","task","turn","shipProp","action","structure","mapProperty","timeline","initScene","inputs","doc","document","getElementById","track","createElement","setAttribute","appendChild","htmlElements","htmlElement","camera","CameraYOffset","atan","String","battleship","render","slide","value","addEventListener","EVENTS","SliderMouseDown","SliderMouseUp","SliderValue","slider","test","setTimeout","simulate","current","present","isDone","update","html","then","done","moveShip","catch","err","error","fireShip","sinkShip","hitShip","alert","OceanPadding","SinkDistance","BulletArc","WaitTimePerTileMoved","WaitTimeBetweenAction","init","name","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","getParameterByName","database","ref","child","once","res","val","ids","warn","input","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Ship"],"mappings":"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","file":"../main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n// Initialize Firebase\nvar config = {\n\tapiKey: \"AIzaSyA9EYUXVL5WAh6Aam1qXlWyvi3b7HLcZ1U\",\n\tauthDomain: \"esigamma.firebaseapp.com\",\n\tdatabaseURL: \"https://esigamma.firebaseio.com\",\n\tprojectId: \"esigamma\",\n\tstorageBucket: \"esigamma.appspot.com\",\n\tmessagingSenderId: \"734163636039\"\n};\nfirebase.initializeApp(config);\n\nvar database = firebase.database();\nvar battleship = Ship();\n\nvar test = void 0;\n\nfunction Simulation() {\n\n\t// private\n\tvar OPTION = {\n\t\tGridScale: 4,\n\t\tCameraYOffset: 15,\n\t\tOceanYOffset: 0,\n\t\tOceanPadding: 10,\n\t\tShipYOffset: 0,\n\t\tSinkDistance: 5,\n\t\tBulletArc: 2,\n\t\tWaitTimePerTileMoved: 300,\n\t\tWaitTimeBetweenAction: 50 // in miliseconds\n\t};\n\n\tvar EVENTS = {\n\t\tSliderMouseDown: false,\n\t\tSliderMouseUp: false,\n\t\tSliderValue: 0\n\t};\n\n\tfunction getParameterByName(name, url) {\n\t\tif (!url) url = window.location.href;\n\t\tname = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t\tvar regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\");\n\t\tvar results = regex.exec(url);\n\t\tif (!results) return null;\n\t\tif (!results[2]) return '';\n\t\treturn decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t}\n\n\tfunction transform(data, scale) {\n\t\tconsole.log(\"transform() \", data);\n\t\tvar result = data.map(function (entry) {\n\t\t\tif (entry.hasOwnProperty(\"atX\") && entry.hasOwnProperty(\"atY\")) {\n\t\t\t\tentry.atX = scale * entry.atX;\n\t\t\t\tentry.atZ = scale * entry.atY; // 3D uses the xz plane as part of the ground\n\t\t\t\tentry.atY = OPTION.ShipYOffset; // vertical offset with respect to the ground and user in VR mode\n\t\t\t}\n\t\t\tentry.x = scale * entry.x;\n\t\t\tentry.z = scale * entry.y; // 3D uses the xz plane as part of the ground\n\t\t\tentry.y = OPTION.ShipYOffset;\n\t\t\treturn entry;\n\t\t});\n\t\treturn result;\n\t};\n\n\tfunction mapProperty(shipProp, action) {\n\t\tconsole.log(shipProp);\n\t\tvar structure = {\n\t\t\tstates: shipProp.states,\n\t\t\ttask: action\n\t\t};\n\n\t\tstructure.states = shipProp.states.map(function (ship) {\n\t\t\tif (action.id === ship.id) {\n\t\t\t\tswitch (action.type) {\n\t\t\t\t\tcase 'MOVE':\n\t\t\t\t\t\t// update state from the result of the last action list\n\t\t\t\t\t\tvar last = action.actions[action.actions.length - 1];\n\t\t\t\t\t\tship.z = last.z;\n\t\t\t\t\t\tship.x = last.x;\n\t\t\t\t\t\treturn ship;\n\t\t\t\t\tcase 'SINK':\n\t\t\t\t\t\tship.sunk = true;\n\t\t\t\t\t\treturn ship;\n\t\t\t\t\tcase 'Hit':\n\t\t\t\t\t\tship.health--;\n\t\t\t\t\t\treturn ship;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn ship;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn ship;\n\t\t\t}\n\t\t});\n\t\treturn structure;\n\t}\n\n\t// Map a sequence of actions that are considered atomic into a chain-able list of actions for smooth animation and movements \n\tfunction actionChain(data) {\n\t\tvar result = [];\n\t\tdata.map(function (entry) {\n\t\t\tif (result && result.length > 0) {\n\t\t\t\t// result[i] will always have at least one item in its action attribute list\n\t\t\t\tvar last = result[result.length - 1].actions;\n\t\t\t\t// action can be chained if they are of the same type from the same ship id\n\t\t\t\t// console.log(\"Comparing: \", result[result.length-1], last, entry);\n\t\t\t\tif (last[0].id === entry.id && last[0].type === entry.type && (last[0].type === \"MOVE\" || last[0].type === \"FIRE\" && last[0].atX === entry.atX && last[0].atY === entry.atY)) {\n\t\t\t\t\t// Movement can be chained and firing at the same location can be chained\n\t\t\t\t\tlast.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttype: entry.type,\n\t\t\t\t\t\tactions: [entry]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// if result is empty, initial case\n\t\t\t\tresult.push({\n\t\t\t\t\ttype: entry.type,\n\t\t\t\t\tactions: [entry]\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tconsole.log(result);\n\t\treturn result;\n\t}\n\n\tfunction preprocess(data) {\n\t\tvar result = {};\n\t\tconsole.log(\"preprocess() \", data);\n\n\t\t// defines the ocean/map configuration\n\t\tresult.map = {\n\t\t\tx: OPTION.GridScale * Math.floor(data.ocean.x / 2) - 2,\n\t\t\ty: OPTION.OceanYOffset,\n\t\t\tz: OPTION.GridScale * Math.floor(data.ocean.y / 2),\n\t\t\twidth: 200,\n\t\t\tdepth: 200,\n\t\t\tdensity: 120\n\n\t\t\t// scale up ship's initial locations\n\t\t};result.ships = transform(data.ships, OPTION.GridScale);\n\n\t\t// add sunk property into the initial state of the ships\n\t\tresult.ships.forEach(function (ship) {\n\t\t\tship.sunk = false;\n\t\t\tship.health = ship.hull;\n\t\t});\n\n\t\t// scale up coordinates in the action list, then call the actionChain to group sequences of action into a unit\n\t\tresult.turns = actionChain(transform(data.turns, OPTION.GridScale));\n\t\tresult.turns.push({ type: 'END', actions: undefined });\n\t\tresult.turns.unshift({ type: 'START', actions: undefined });\n\n\t\tconsole.log(result);\n\n\t\tresult['timeline'] = [];\n\t\tresult['present'] = 0;\n\n\t\tconsole.log('init states: ', result.ships);\n\n\t\tvar currentState = { states: result.ships, task: result.turns[0] };\n\t\t// calculate ships' state for all the turns, used to animate later\n\t\tresult.turns.forEach(function (turn) {\n\t\t\tcurrentState = mapProperty(currentState, turn);\n\t\t\tresult.timeline.push(currentState);\n\t\t});\n\n\t\tconsole.log(result);\n\t\treturn result;\n\t}\n\n\tfunction render(data) {\n\t\tvar htmlElement = {};\n\t\tvar doc = document.getElementById('scene'); // <a-scene> reference\n\n\t\t// reposition camera - camera must be already present when html loads\n\t\tvar camera = document.getElementById('camera');\n\t\t//camera.setAttribute('position', data.ocean.x + \" \" + data.ocean.y + \" \" + data.ocean.z);\n\t\tcamera.setAttribute('position', data.map.x + \" \" + data.map.y + \" \" + (data.map.z + 1.5 * data.map.x));\n\t\tcamera.setAttribute('camera', 'userHeight: ' + OPTION.CameraYOffset);\n\t\tcamera.setAttribute('rotation', -Math.atan(OPTION.CameraYOffset / (data.map.z + data.map.x)));\n\n\t\t// Generate Map\n\t\t// TODO: Possible edge cases with the map edge not being big enough\n\t\tvar map = document.createElement('a-ocean');\n\t\tmap.setAttribute('position', data.map.x + \" \" + data.map.y + \" \" + data.map.z);\n\t\tmap.setAttribute('width', String(data.map.width));\n\t\tmap.setAttribute('depth', String(data.map.depth));\n\t\tmap.setAttribute('density', String(data.map.density));\n\t\tdoc.appendChild(map);\n\n\t\t// Spawn Ships\n\t\tdata.ships.forEach(function (entry) {\n\t\t\thtmlElement[entry.id] = battleship.render(entry);\n\t\t});\n\n\t\treturn htmlElement;\n\t}\n\n\tfunction initScene(inputs) {\n\t\tvar doc = document.getElementById('scene');\n\t\tvar track = document.createElement('a-curve');\n\t\ttrack.setAttribute('id', 'track');\n\t\ttrack.setAttribute('type', 'Line');\n\t\tdoc.appendChild(track);\n\n\t\tvar data = preprocess(inputs);\n\t\tvar htmlElements = render(data);\n\t\tdata['html'] = htmlElements;\n\n\t\tvar slide = document.getElementById('slider');\n\t\tslide.setAttribute('min', 0);\n\t\tslide.setAttribute('max', data.timeline.length);\n\t\tslide.value = 0;\n\t\tslide.addEventListener('mousedown', function () {\n\t\t\tEVENTS.SliderMouseDown = true;\n\t\t});\n\t\tslide.addEventListener('mouseup', function () {\n\t\t\tEVENTS.SliderMouseDown = false;\n\t\t\tEVENTS.SliderMouseUp = true;\n\t\t\tEVENTS.SliderValue = slider.value;\n\t\t});\n\n\t\ttest = data;\n\n\t\t// begin simulation\n\t\tsetTimeout(function () {\n\t\t\tsimulate(data);\n\t\t}, 1000);\n\t}\n\n\tfunction simulate(data) {\n\t\tvar slider = document.getElementById(\"slider\");\n\t\tvar current = data.timeline[data.present++];\n\t\tvar isDone = false;\n\t\tif (data.present == data.timeline.length) isDone = true;\n\n\t\t// TODO: Use the OPTION's time between per action to animate slider increment\n\t\tif (!EVENTS.SliderMouseDown) {\n\t\t\tslider.value = data.present;\n\t\t}\n\n\t\tif (EVENTS.SliderMouseUp) {\n\t\t\tEVENTS.SliderMouseUp = false;\n\t\t\tdata.present = EVENTS.SliderValue;\n\t\t\tbattleship.update(data.html, current).then(function (done) {\n\t\t\t\tsimulate(data);\n\t\t\t});\n\t\t\treturn;\n\t\t} else if (current && !isDone) {\n\t\t\tswitch (current.task.type) {\n\t\t\t\tcase \"MOVE\":\n\t\t\t\t\tbattleship.moveShip(data.html, current, OPTION).then(function (done) {\n\t\t\t\t\t\tsimulate(data);\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\tconsole.error('Error at movement simulation: ', err);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"FIRE\":\n\t\t\t\t\tbattleship.fireShip(current, OPTION).then(function (done) {\n\t\t\t\t\t\t//alert(\"Fired \" + data.turns.length + \" actions left\");\n\t\t\t\t\t\t// console.log(\"Fire case 0: \", data.present.task.type);\n\t\t\t\t\t\tsimulate(data);\n\t\t\t\t\t\t// });\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\tconsole.error('Error at firing simulation: ', err);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SINK\":\n\t\t\t\t\tbattleship.sinkShip(data.html, current, OPTION).then(function (done) {\n\t\t\t\t\t\t//alert(\"Sunk \"+ data.turns.length + \" actions left\");\n\t\t\t\t\t\tsimulate(data);\n\t\t\t\t\t\t// });\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\tconsole.error('Error at sinking simulation: ', err);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"HIT\":\n\t\t\t\t\tbattleship.hitShip(data.html, current).then(function (done) {\n\t\t\t\t\t\tsimulate(data);\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\tconsole.log('Error at ship damage simulation: ', err);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"END\":\n\t\t\t\t\t// Disabled slider because resetting timeline is not working\n\t\t\t\t\t// slider.addEventListener('change', () => {\n\t\t\t\t\t// \tsimulate(data);\n\t\t\t\t\t// \tslider.removeEventListener('change');\n\t\t\t\t\t// });\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\talert(\"Simulation Done, use slider to playback.\");\n\t\t\t\t\t}, 5000);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"START\":\n\t\t\t\t\tconsole.log('Reading start of simulation marker.');\n\t\t\t\t\tsimulate(data);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(\"Unknown Action Type \" + current.type + \" in simulate function, skipping.\");\n\t\t\t\t// comment below during development to catch bugs, production code should continue along with simulation\n\t\t\t\t//simulate(data);;\n\t\t\t}\n\t\t} else {\n\t\t\t// Disabled slider because resetting timeline is not working\n\t\t\t// slider.addEventListener('change', () => {\n\t\t\t// \tsimulate(data);\n\t\t\t// \tslider.removeEventListener('change');\n\t\t\t// });\n\t\t\tsetTimeout(function () {\n\t\t\t\talert(\"Simulation Done...\");\n\t\t\t}, 10000);\n\t\t}\n\t}\n\n\t// public\n\tvar app = {\n\n\t\tinit: function init() {\n\t\t\tvar inputs = {};\n\t\t\tvar code = getParameterByName('code');\n\n\t\t\tif (code) {\n\t\t\t\tvar ref = database.ref('davy-jones-locker').child(code);\n\t\t\t\tref.once('value', function (res) {\n\t\t\t\t\tconsole.log(\"Firebase: \", res.val());\n\t\t\t\t\tinputs = {\n\t\t\t\t\t\t\"ids\": res.val().init.ships.map(function (s) {\n\t\t\t\t\t\t\treturn s.id;\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t\"ships\": res.val().init.ships,\n\t\t\t\t\t\t\"turns\": res.val().turns,\n\t\t\t\t\t\t\"ocean\": res.val().init.map\n\t\t\t\t\t};\n\t\t\t\t}, function (err) {\n\t\t\t\t\tconsole.warn(\"Unknown URL Code \" + code + \", using default offline input\");\n\t\t\t\t\tinputs = {\n\t\t\t\t\t\t\"ids\": input.init.ships.map(function (s) {\n\t\t\t\t\t\t\treturn s.id;\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t\"ships\": input.init.ships,\n\t\t\t\t\t\t\"turns\": input.turns,\n\t\t\t\t\t\t\"ocean\": input.init.map\n\t\t\t\t\t};\n\t\t\t\t}).then(function () {\n\t\t\t\t\tconsole.log(\"init() \", inputs);\n\t\t\t\t\tinitScene(inputs);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log('Missing URL parameter code, using default offline input');\n\t\t\t\tinputs = {\n\t\t\t\t\t\"ids\": input.init.ships.map(function (s) {\n\t\t\t\t\t\treturn s.id;\n\t\t\t\t\t}),\n\t\t\t\t\t\"ships\": input.init.ships,\n\t\t\t\t\t\"turns\": input.turns,\n\t\t\t\t\t\"ocean\": input.init.map\n\t\t\t\t};\n\t\t\t\tconsole.log(\"init() \", inputs);\n\t\t\t\tinitScene(inputs);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn app;\n}\n\nvar app = Simulation();\napp.init();\n\n//let params = getParameterByName(document.location.search);\n\n// let getDataFromCode = (code) => {\n// \tdatabase.ref('davy-jones-locker/' + code).once('value', (snapshot) => {\n// \t\tvar gameData = snapshot.val();\n// \t\tif (gameData) {\n// \t\t\tinput = gameData;\n// \t\t\tapp.init();\n// \t\t} else {\n// \t\t\tgetCode(`No data for code ${code}. Enter another code:`);\n// \t\t\t//app.init();\n// \t\t}\n// \t}).catch((err) => {\n// \t\tgetCode(`There was an error. Enter another code:`);\n// \t\t//app.init();\n// \t});\n// }\n\n// let getCode = (message) => {\n// \tvex.dialog.prompt({\n// \t\tmessage: message,\n// \t\tcallback: (value) => {\n// \t\t\tif (value) {\n// \t\t\t\tvar code = value;\n// \t\t\t\tgetDataFromCode(code);\n// \t\t\t} else {\n// \t\t\t\tgetCode(\"No code entered. Enter your code:\");\n// \t\t\t}\n// \t\t}\n// \t});\n// }\n\n// if (params.code) {\n// \tgetDataFromCode(params.code);\n// } else {\n// \tgetCode(\"Enter Your Code\");\n// }\n\n\n// var BATTLE_SERVER_URL = 'https://battleship-vingkan.c9users.io/1v1?p1=esi17.cs.DestroyerShip&p2=esi17.hli109.Floater';// + Math.ceil(Math.random() * 100);\n\n// $.get(BATTLE_SERVER_URL).then(data => {\n// \tinput = data;\n// \tapp.init();\n// }).done(() => {\n// \tconsole.log(\"Data successfully retrieved from server\");\n// }).fail(() => {\n// \tconsole.log(\"Unable to retrieve data, starting with local data\");\n// \tapp.init();\n// });\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}