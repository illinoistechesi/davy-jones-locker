{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Simulation","transform","data","scale","OPTION","console","log","map","entry","hasOwnProperty","atX","atZ","atY","ShipYOffset","x","z","y","preprocess","result","GridScale","Math","floor","ocean","OceanYOffset","width","depth","density","ships","forEach","ship","sunk","turns","actionChain","push","type","actions","undefined","snapshots","past","present","future","currentState","states","next","resutl","turn","append","tree","action","structure","id","last","reducer","pop","initScene","inputs","doc","document","getElementById","track","createElement","setAttribute","appendChild","Constants","htmlElements","htmlElement","camera","CameraYOffset","atan","String","battleship","render","slide","value","model","html","test","setTimeout","simulate","notStop","m_chain","current","shift","moveShip","then","done","catch","err","error","fireShip","hitShip","sinkShip","warn","vex","dialog","alert","OceanPadding","SinkDistance","BulletArc","WaitTimePerTileMoved","WaitTimeBetweenAction","init","name","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","getParameterByName","database","ref","child","once","res","ids","val","input","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Ship"],"mappings":"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","file":"../main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n// Initialize Firebase\nvar config = {\n\tapiKey: \"AIzaSyA9EYUXVL5WAh6Aam1qXlWyvi3b7HLcZ1U\",\n\tauthDomain: \"esigamma.firebaseapp.com\",\n\tdatabaseURL: \"https://esigamma.firebaseio.com\",\n\tprojectId: \"esigamma\",\n\tstorageBucket: \"esigamma.appspot.com\",\n\tmessagingSenderId: \"734163636039\"\n};\nfirebase.initializeApp(config);\n\nvar database = firebase.database();\nvar battleship = Ship();\n\nvar test = void 0;\n\nfunction getParameterByName(name, url) {\n\tif (!url) url = window.location.href;\n\tname = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\tvar regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\");\n\tvar results = regex.exec(url);\n\tif (!results) return null;\n\tif (!results[2]) return '';\n\treturn decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nfunction Simulation() {\n\n\t// private\n\tvar Constants = {\n\t\tGridScale: 4,\n\t\tCameraYOffset: 25,\n\t\tOceanYOffset: 0,\n\t\tOceanPadding: 10,\n\t\tShipYOffset: 0,\n\t\tSinkDistance: 5,\n\t\tBulletArc: 2,\n\t\tWaitTimePerTileMoved: 300,\n\t\tWaitTimeBetweenAction: 50 // in miliseconds\n\t};\n\n\tvar m_input = {};\n\n\tvar m_ships = []; // stores formatted json of ship initialization\n\tvar m_chain = []; // stores chainable actions in a turn\n\tvar m_entity = {}; // object with id to html dom element of ships\n\n\tvar m_test = 0;\n\n\tvar m_ocean = void 0;\n\n\tfunction transform(data, scale, OPTION) {\n\t\tconsole.log(\"transform() \", data);\n\t\tvar result = data.map(function (entry) {\n\t\t\tif (entry.hasOwnProperty(\"atX\") && entry.hasOwnProperty(\"atY\")) {\n\t\t\t\tentry.atX = scale * entry.atX;\n\t\t\t\tentry.atZ = scale * entry.atY; // 3D uses the xz plane as part of the ground\n\t\t\t\tentry.atY = OPTION.ShipYOffset; // vertical offset with respect to the ground and user in VR mode\n\t\t\t}\n\t\t\tentry.x = scale * entry.x;\n\t\t\tentry.z = scale * entry.y; // 3D uses the xz plane as part of the ground\n\t\t\tentry.y = OPTION.ShipYOffset;\n\t\t\treturn entry;\n\t\t});\n\t\treturn result;\n\t};\n\n\tfunction reducer(tree, action, OPTION) {\n\t\tconsole.log(tree);\n\t\tvar structure = {\n\t\t\tstates: tree.states,\n\t\t\tnext: action\n\t\t};\n\n\t\tstructure.states = tree.states.map(function (ship) {\n\t\t\tif (action.id === ship.id) {\n\t\t\t\tswitch (action.type) {\n\t\t\t\t\tcase 'MOVE':\n\t\t\t\t\t\t// iterate over all the chained actions and apply it the the state\n\t\t\t\t\t\t// function would need to check validity in movement, which not checked in the data\n\t\t\t\t\t\t// action.actions.forEach((a) => {\n\t\t\t\t\t\t// \tif (a.direction === \"North\") {\n\t\t\t\t\t\t// \t\tif (ship.z > 0)\n\t\t\t\t\t\t// \t\t\tship.z -= OPTION.GridScale;\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t// \telse if (a.direction === \"South\") {\n\t\t\t\t\t\t// \t\tship.z += OPTION.GridScale;\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t// \telse if (a.direction === \"West\") {\n\t\t\t\t\t\t// \t\tif (ship.x > 0)\n\t\t\t\t\t\t// \t\t\tship.x -= OPTION.GridScale;\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t// \telse if (a.direction === \"East\") {\n\t\t\t\t\t\t// \t\tship.x += OPTION.GridScale;\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// shortcut, update state from the result of the last action list\n\t\t\t\t\t\tvar last = action.actions[action.actions.length - 1];\n\t\t\t\t\t\tship.z = last.z;\n\t\t\t\t\t\tship.x = last.x;\n\t\t\t\t\t\treturn ship;\n\t\t\t\t\tcase 'Sunk':\n\t\t\t\t\t\tship.sunk = true;\n\t\t\t\t\t\treturn ship;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn ship;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn ship;\n\t\t\t}\n\t\t});\n\t\treturn structure;\n\t}\n\n\tfunction preprocess(data, OPTION) {\n\t\tvar result = {};\n\t\tconsole.log(\"preprocess() \", data);\n\n\t\t// defines the ocean/map configuration\n\t\tresult.map = {\n\t\t\tx: OPTION.GridScale * Math.floor(data.ocean.x / 2) - 2,\n\t\t\ty: OPTION.OceanYOffset,\n\t\t\tz: OPTION.GridScale * Math.floor(data.ocean.y / 2),\n\t\t\twidth: 200,\n\t\t\tdepth: 200,\n\t\t\tdensity: 120\n\n\t\t\t// scale up ship's initial locations\n\t\t};result.ships = transform(data.ships, OPTION.GridScale);\n\n\t\t// add sunk property into the initial state of the ships\n\t\tresult.ships.forEach(function (ship) {\n\t\t\tship.sunk = false;\n\t\t});\n\n\t\t// scale up coordinates in the action list, then call the actionChain to group sequences of action into a unit\n\t\tresult.turns = actionChain(transform(data.turns, OPTION.GridScale, OPTION));\n\t\tresult.turns.push({ type: 'END', actions: undefined }); // add end of simulation marker\n\n\t\tconsole.log(result);\n\n\t\tresult.snapshots = {\n\t\t\tpast: [],\n\t\t\tpresent: {},\n\t\t\tfuture: []\n\t\t};\n\n\t\tconsole.log('init states: ', result.ships);\n\n\t\tvar currentState = { states: result.ships, next: resutl.turns[0] };\n\t\tresult.turns.forEach(function (turn) {\n\t\t\tresult.snapshots.future.append(currentState);\n\t\t\tcurrentState = reducer(currentState, turn, OPTION);\n\t\t});\n\t\t// result.snapshots.future.reverse();\n\t\tresult.snapshots.present = result.snapshots.future.pop(0);\n\n\t\tconsole.log(result);\n\t\treturn result;\n\t}\n\n\tfunction render(data, OPTION) {\n\t\tvar htmlElement = {};\n\t\tvar doc = document.getElementById('scene'); // <a-scene> reference\n\n\t\t// reposition camera - camera must be already present when html loads\n\t\tvar camera = document.getElementById('camera');\n\t\t//camera.setAttribute('position', data.ocean.x + \" \" + data.ocean.y + \" \" + data.ocean.z);\n\t\tcamera.setAttribute('position', data.map.x + \" \" + data.map.y + \" \" + (data.map.z + 1.5 * data.map.x));\n\t\tcamera.setAttribute('camera', 'userHeight: ' + OPTION.CameraYOffset);\n\t\tcamera.setAttribute('rotation', -Math.atan(OPTION.CameraYOffset / (data.map.z + data.map.x)));\n\n\t\t// Generate Map\n\t\t// TODO: Possible edge cases with the map edge not being big enough\n\t\tvar map = document.createElement('a-ocean');\n\t\tmap.setAttribute('position', data.map.x + \" \" + data.map.y + \" \" + data.map.z);\n\t\tmap.setAttribute('width', String(data.map.width));\n\t\tmap.setAttribute('depth', String(data.map.depth));\n\t\tmap.setAttribute('density', String(data.map.density));\n\t\tdoc.appendChild(map);\n\n\t\t// Spawn Ships\n\t\tdata.ships.forEach(function (entry) {\n\t\t\thtmlElement[entry.id] = battleship.render(entry);\n\t\t});\n\t}\n\n\tfunction initScene(inputs) {\n\t\tvar doc = document.getElementById('scene');\n\t\tvar track = document.createElement('a-curve');\n\t\ttrack.setAttribute('id', 'track');\n\t\ttrack.setAttribute('type', 'Line');\n\t\tdoc.appendChild(track);\n\n\t\tconsole.log(\"initScene() \", inputs);\n\t\tvar data = preprocess(inputs, Constants);\n\n\t\tvar htmlElements = render(data, Constants);\n\t\tconsole.log(data);\n\n\t\tvar slide = document.getElementById('slider');\n\t\tslide.setAttribute('min', 0);\n\t\tslide.setAttribute('max', data.snapshots.future.length);\n\t\tslide.value = 0;\n\n\t\tvar model = {\n\t\t\thtml: htmlElements,\n\t\t\tsnapshots: data.snapshots\n\t\t};\n\t\ttest = model;\n\n\t\t// begin simulation\n\t\tsetTimeout(function () {\n\t\t\tsimulate(model, Constants);\n\t\t}, 10000);\n\t}\n\n\tfunction simulate() {\n\t\t//console.log(\"chain: \", m_chain);\n\t\tvar notStop = true;\n\t\tif (m_chain.length == 0) {\n\t\t\tnotStop = false;\n\t\t}\n\t\tvar current = m_chain.shift(); // don't shift when length is zero\n\t\tif (current && notStop) {\n\t\t\t//console.log(\"current: \", current);\n\t\t\tswitch (current.type) {\n\t\t\t\tcase \"MOVE\":\n\t\t\t\t\tbattleship.moveShip(current.actions).then(function (done) {\n\t\t\t\t\t\t//alert(\"Moved \" + m_chain.length + \" actions left\");\n\t\t\t\t\t\tsimulate();\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"FIRE\":\n\t\t\t\t\t/*** Exclusive Or functions ***/\n\n\t\t\t\t\t/* Fire without aiming */\n\t\t\t\t\tbattleship.fireShip(current.actions).then(function (done) {\n\t\t\t\t\t\tsimulate();\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\tconsole.error(\"error: \", err);\n\t\t\t\t\t});\n\n\t\t\t\t\t// /* Aim then fire (currently buggy)*/\n\t\t\t\t\t// battleship.aimShip(current.actions).then((done) => {\n\t\t\t\t\t// \tbattleship.fireShip(current.actions).then((done) => {\n\t\t\t\t\t// \t\tsimulate();\n\t\t\t\t\t// \t}).catch((err) => {\n\t\t\t\t\t// \t\tconsole.error(\"error: \", err);\t\n\t\t\t\t\t// \t});\n\t\t\t\t\t// }).catch((err) => {\n\t\t\t\t\t// \tconsole.error(\"error: \", err);\n\t\t\t\t\t// });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"HIT\":\n\t\t\t\t\tbattleship.hitShip(current.actions).then(function (done) {\n\t\t\t\t\t\tsimulate();\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SINK\":\n\t\t\t\t\tbattleship.sinkShip(current.actions).then(function (done) {\n\t\t\t\t\t\t//alert(\"Sunk \"+ m_chain.length + \" actions left\");\n\t\t\t\t\t\tsimulate();\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn(\"Unknown Action type \" + current.type + \" in simulate function, skipping.\");\n\t\t\t\t\tsimulate();\n\t\t\t}\n\t\t} else {\n\t\t\tsetTimeout(function () {\n\t\t\t\t//alert(\"Simulation Done\");\n\t\t\t\tvex.dialog.alert(\"Simulation Completed.\");\n\t\t\t}, 1000);\n\t\t}\n\t}\n\n\t// public\n\tvar app = {\n\n\t\tinit: function init() {\n\t\t\tvar inputs = {};\n\t\t\tvar code = getParameterByName('code');\n\n\t\t\tif (code) {\n\t\t\t\tvar ref = database.ref('davy-jones-locker').child(code);\n\t\t\t\tref.once('value', function (res) {\n\t\t\t\t\tinputs = {\n\t\t\t\t\t\t\"ids\": res.val().init.ships.map(function (s) {\n\t\t\t\t\t\t\treturn s.id;\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t\"ships\": res.val().init.ships,\n\t\t\t\t\t\t\"turns\": res.val().turns,\n\t\t\t\t\t\t\"ocean\": res.val().init.map\n\t\t\t\t\t};\n\t\t\t\t}, function (err) {\n\t\t\t\t\tconsole.warn(\"Unknown URL Code \" + code + \", using default offline input\");\n\t\t\t\t\tinputs = {\n\t\t\t\t\t\t\"ids\": input.init.ships.map(function (s) {\n\t\t\t\t\t\t\treturn s.id;\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t\"ships\": input.init.ships,\n\t\t\t\t\t\t\"turns\": input.turns,\n\t\t\t\t\t\t\"ocean\": input.init.map\n\t\t\t\t\t};\n\t\t\t\t}).then(function () {\n\t\t\t\t\tconsole.log(\"init() \", inputs);\n\t\t\t\t\tinitScene(inputs);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log('Missing URL parameter code, using default offline input');\n\t\t\t\tinputs = {\n\t\t\t\t\t\"ids\": input.init.ships.map(function (s) {\n\t\t\t\t\t\treturn s.id;\n\t\t\t\t\t}),\n\t\t\t\t\t\"ships\": input.init.ships,\n\t\t\t\t\t\"turns\": input.turns,\n\t\t\t\t\t\"ocean\": input.init.map\n\t\t\t\t};\n\t\t\t\tconsole.log(\"init() \", inputs);\n\t\t\t\tinitScene(inputs);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn app;\n}\n\nvar app = Simulation();\napp.init();\n\n//let params = getParameterByName(document.location.search);\n\n// let getDataFromCode = (code) => {\n// \tdatabase.ref('davy-jones-locker/' + code).once('value', (snapshot) => {\n// \t\tvar gameData = snapshot.val();\n// \t\tif (gameData) {\n// \t\t\tinput = gameData;\n// \t\t\tapp.init();\n// \t\t} else {\n// \t\t\tgetCode(`No data for code ${code}. Enter another code:`);\n// \t\t\t//app.init();\n// \t\t}\n// \t}).catch((err) => {\n// \t\tgetCode(`There was an error. Enter another code:`);\n// \t\t//app.init();\n// \t});\n// }\n\n// let getCode = (message) => {\n// \tvex.dialog.prompt({\n// \t\tmessage: message,\n// \t\tcallback: (value) => {\n// \t\t\tif (value) {\n// \t\t\t\tvar code = value;\n// \t\t\t\tgetDataFromCode(code);\n// \t\t\t} else {\n// \t\t\t\tgetCode(\"No code entered. Enter your code:\");\n// \t\t\t}\n// \t\t}\n// \t});\n// }\n\n// if (params.code) {\n// \tgetDataFromCode(params.code);\n// } else {\n// \tgetCode(\"Enter Your Code\");\n// }\n\n\n// var BATTLE_SERVER_URL = 'https://battleship-vingkan.c9users.io/1v1?p1=esi17.cs.DestroyerShip&p2=esi17.hli109.Floater';// + Math.ceil(Math.random() * 100);\n\n// $.get(BATTLE_SERVER_URL).then(data => {\n// \tinput = data;\n// \tapp.init();\n// }).done(() => {\n// \tconsole.log(\"Data successfully retrieved from server\");\n// }).fail(() => {\n// \tconsole.log(\"Unable to retrieve data, starting with local data\");\n// \tapp.init();\n// });\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}