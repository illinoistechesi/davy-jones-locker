{"version":3,"sources":["ship.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module"],"mappings":"CAAA,SAAUA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAkB,mBAATC,SAAqBA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,IAAIS,YAAYb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,IAAIE,EAAED,EAAEI,GAAG,GAAGL,GAAG,OAAOI,EAAEF,GAAIF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAkD,IAAI,IAA1CL,EAAkB,mBAATD,SAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAAvb,EAA4ba,GAAG,SAAST,EAAQU,EAAOJ,GACvd,uBA6PW","file":"../ship.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nfunction Ship() {\n\tvar action = {\n\t\trender: function render(data) {\n\t\t\tvar attr = {\n\t\t\t\t\"dom\": null, // ships html dom component\n\t\t\t\t\"health\": null, // ship's health bar, display as dots\n\t\t\t\t\"color\": null, // ship color\n\t\t\t\t\"name\": null, // ship's display name\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"id\": null,\n\t\t\t\t\"x\": null,\n\t\t\t\t\"y\": null,\n\t\t\t\t\"z\": null,\n\t\t\t\t\"firepower\": null,\n\t\t\t\t\"hull\": null,\n\t\t\t\t\"speed\": null,\n\t\t\t\t\"range\": null,\n\t\t\t\t\"sunk\": null\n\t\t\t};\n\t\t\tfor (var keys in data) {\n\t\t\t\tattr[keys] = data[keys];\n\t\t\t}\n\n\t\t\tvar doc = document.getElementById('scene');\n\t\t\tvar ship = document.createElement('a-entity');\n\n\t\t\tship.setAttribute('position', data.x + ' ' + data.y + ' ' + data.z);\n\t\t\tif (data.color === 'rgb(255, 255, 0)') {\n\t\t\t\tship.setAttribute('template', 'src: #submarine-template');\n\t\t\t\tship.setAttribute('class', 'submarine');\n\t\t\t} else {\n\t\t\t\tship.setAttribute('template', 'src: #boat-template');\n\t\t\t\tship.setAttribute('class', 'boat');\n\t\t\t}\n\n\t\t\tvar heart = '';\n\t\t\tfor (var i = 0; i < data.hull; i++) {\n\t\t\t\theart += ' •';\n\t\t\t}\n\n\t\t\t// ${variable} <- variable name be lower case\n\t\t\tship.setAttribute('data-ship_color', \"color: \" + data.color + \"; metalness: 0.4;\");\n\t\t\tship.setAttribute('data-ship_name', \"value: \" + data.name + \"; font: #play;\");\n\t\t\tship.setAttribute('data-ship_health', \"value: \" + heart + \"';\");\n\n\t\t\tattr.dom = doc.appendChild(ship);\n\n\t\t\treturn attr;\n\t\t},\n\n\t\tupdate: function update(domElement, current) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tconsole.log(domElement);\n\t\t\t\tconsole.log(current);\n\t\t\t\tcurrent.states.forEach(function (state) {\n\t\t\t\t\tvar ship = domElement[state.id];\n\t\t\t\t\tvar heart = '';\n\t\t\t\t\tfor (var i = 0; i < state.health; i++) {\n\t\t\t\t\t\theart += ' •';\n\t\t\t\t\t}\n\n\t\t\t\t\tship.dom.setAttribute('position', state.x + \" \" + state.y + \" \" + state.z);\n\t\t\t\t\tship.dom.setAttribute('visible', !state.sunk);\n\t\t\t\t\tship.dom.setAttribute('health', \"value: \" + heart);\n\t\t\t\t\tconsole.log(heart);\n\t\t\t\t\tship.dom.removeAttribute('alongpath');\n\t\t\t\t});\n\t\t\t\tvar doc = document.getElementById('scene');\n\t\t\t\tvar track = document.getElementById('track');\n\n\t\t\t\tdoc.removeChild(track);\n\t\t\t\ttrack = document.createElement('a-curve');\n\t\t\t\ttrack.setAttribute('id', 'track');\n\t\t\t\ttrack.setAttribute('type', 'Line');\n\t\t\t\tdoc.appendChild(track);\n\n\t\t\t\t// while(track.hasChildNodes()) {\n\t\t\t\t// \ttrack.removeChild(track.childNodes[0]);\n\t\t\t\t// }\n\t\t\t\tresolve();\n\t\t\t});\n\t\t},\n\n\t\tsinkShip: function sinkShip(domElement, current, OPTION) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar doc = document.getElementById('scene');\n\t\t\t\tvar track = document.getElementById('track');\n\t\t\t\tconsole.log(\"sinkShip(): \", domElement, current);\n\t\t\t\tvar action = current.task.actions[0]; // sink action should only have a size of one\n\t\t\t\tvar ship = domElement[action.id];\n\n\t\t\t\tvar debug = document.createElement('a-draw-curve');\n\t\t\t\tdebug.setAttribute('curveref', '#track');\n\t\t\t\tdebug.setAttribute('material', 'shader: line; color: black;');\n\t\t\t\tdoc.appendChild(debug);\n\n\t\t\t\tvar point1 = document.createElement('a-curve-point');\n\t\t\t\tvar point2 = document.createElement('a-curve-point');\n\t\t\t\tpoint1.setAttribute('position', action.x + \" \" + action.y + \" \" + action.z);\n\t\t\t\tpoint2.setAttribute('position', action.x + \" \" + (action.y - OPTION.SinkDistance) + \" \" + action.z);\n\t\t\t\ttrack.appendChild(point1);\n\t\t\t\ttrack.appendChild(point2);\n\n\t\t\t\tship.dom.setAttribute('alongpath', \"curve: #track; rotate: true; constraint: 0 1 0; delay: \" + OPTION.WaitTimeBetweenAction + \"; dur: 3000;\");\n\n\t\t\t\tship.dom.addEventListener('movingended', function () {\n\t\t\t\t\tship.dom.removeAttribute('alongpath');\n\t\t\t\t\tship.dom.setAttribute('visible', false);\n\n\t\t\t\t\tif (debug.parentNode) {\n\t\t\t\t\t\tdoc.removeChild(debug);\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (track.hasChildNodes()) {\n\t\t\t\t\t\ttrack.removeChild(track.childNodes[0]);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\thitShip: function hitShip(domElement, current) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar action = current.task.actions[0];\n\t\t\t\tvar ship = domElement[action.id];\n\t\t\t\tvar heart = '';\n\n\t\t\t\tfor (var i = 0; i < action.health; i++) {\n\t\t\t\t\theart += ' •';\n\t\t\t\t}\n\t\t\t\tconsole.log(ship.dom.childNodes.length);\n\t\t\t\tfor (var _i = 0; _i < ship.dom.childNodes.length; _i++) {\n\t\t\t\t\tif (ship.dom.childNodes[_i].className === 'ship-health') {\n\t\t\t\t\t\tship.dom.childNodes[_i].setAttribute('text-geometry', \"value: \" + heart + \";\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolve();\n\t\t\t});\n\t\t},\n\n\t\tfireShip: function fireShip(current, OPTION) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar doc = document.getElementById('scene');\n\t\t\t\tvar track = document.getElementById('track');\n\t\t\t\tvar data = current.task.actions;\n\n\t\t\t\tvar bullet = document.createElement('a-sphere');\n\t\t\t\tvar source = document.createElement('a-curve-point');\n\t\t\t\tvar arc = document.createElement('a-curve-point');\n\t\t\t\tvar target = document.createElement('a-curve-point');\n\t\t\t\tbullet.setAttribute('color', 'gray');\n\t\t\t\tbullet.setAttribute('radius', '0.1');\n\t\t\t\tbullet.setAttribute('position', data[0].x + \" \" + data[0].y + \" \" + data[0].z);\n\t\t\t\tsource.setAttribute('position', data[0].x + \" \" + data[0].y + \" \" + data[0].z);\n\t\t\t\ttarget.setAttribute('position', data[0].atX + \" \" + data[0].atY + \" \" + data[0].atZ);\n\t\t\t\tarc.setAttribute('position', (data[0].atX + data[0].x) / 2 + \" \" + ((data[0].atY + data[0].y) / 2 + OPTION.BulletArc) + \" \" + (data[0].atZ + data[0].z) / 2);\n\t\t\t\ttrack.appendChild(source);\n\t\t\t\ttrack.appendChild(arc);\n\t\t\t\ttrack.appendChild(target);\n\n\t\t\t\tvar debug = document.createElement('a-draw-curve');\n\t\t\t\tdebug.setAttribute('curveref', '#track');\n\t\t\t\tdebug.setAttribute('material', 'shader: line; color: red;');\n\t\t\t\tdoc.appendChild(debug);\n\n\t\t\t\tvar path = doc.appendChild(bullet);\n\t\t\t\tpath.setAttribute('alongpath', 'curve: #track; rotate: true; constant: 0 0 1; delay: 200; dur: 500');\n\n\t\t\t\tpath.addEventListener('movingended', function () {\n\t\t\t\t\tpath.removeAttribute('alongpath');\n\t\t\t\t\tif (debug.parentNode) {\n\t\t\t\t\t\tdoc.removeChild(debug);\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (track.hasChildNodes()) {\n\t\t\t\t\t\ttrack.removeChild(track.childNodes[0]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (path.parentNode) {\n\t\t\t\t\t\tdoc.removeChild(path);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\tmoveShip: function moveShip(domElement, current, OPTION) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar doc = document.getElementById('scene');\n\t\t\t\tvar track = document.getElementById('track');\n\t\t\t\tvar data = current.task.actions;\n\t\t\t\tvar ship = domElement[data[0].id];\n\n\t\t\t\t// add a path to show movement along the path\n\t\t\t\tvar debug = document.createElement('a-draw-curve');\n\t\t\t\tdebug.setAttribute('curveref', '#track');\n\t\t\t\tdebug.setAttribute('material', 'shader: line; color: blue;');\n\t\t\t\tdoc.appendChild(debug);\n\n\t\t\t\t// add current location as a starting point of the curve\n\t\t\t\tvar point = document.createElement('a-curve-point');\n\t\t\t\tpoint.setAttribute('position', ship.x + ' ' + ship.y + ' ' + ship.z);\n\t\t\t\ttrack.appendChild(point);\n\t\t\t\t// add chain-able goal locations to the curve\n\t\t\t\tvar previous = { x: ship.x, z: ship.z };\n\t\t\t\tvar xDistance = 0;\n\t\t\t\tvar zDistance = 0;\n\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tpoint = document.createElement('a-curve-point');\n\t\t\t\t\tpoint.setAttribute('position', data[i].x + \" \" + data[i].y + \" \" + data[i].z);\n\t\t\t\t\txDistance += Math.abs(data[i].x - previous.x);\n\t\t\t\t\tzDistance += Math.abs(data[i].z - previous.z);\n\t\t\t\t\ttrack.appendChild(point);\n\t\t\t\t\tprevious = { x: data[i].x, z: data[i].z };\n\t\t\t\t\tif (i + 1 < data.length && data[i].x === data[i + 1].x && data[i].z === data[i + 1].z) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// define time for movement so that speed of difference distance is consistent\n\t\t\t\tvar duration = (xDistance + zDistance) * OPTION.WaitTimePerTileMoved;\n\t\t\t\tship.dom.setAttribute('alongpath', \"curve: #track; rotate: true; constraint: 0 0 1; delay: \" + OPTION.WaitTimeBetweenAction + \"; dur: \" + duration + \";\");\n\n\t\t\t\tship.dom.addEventListener('movingended', function () {\n\t\t\t\t\tif (debug.parentNode) {\n\t\t\t\t\t\tdoc.removeChild(debug);\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (track.hasChildNodes()) {\n\t\t\t\t\t\ttrack.removeChild(track.childNodes[0]);\n\t\t\t\t\t}\n\n\t\t\t\t\tship.dom.removeAttribute('alongpath');\n\t\t\t\t\tship.x = data[data.length - 1].x;\n\t\t\t\t\tship.y = data[data.length - 1].y;\n\t\t\t\t\tship.z = data[data.length - 1].z;\n\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n\n\treturn action;\n}\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}